webpackJsonp(["components/input/demo"],{"5de/":function(n,a,s){n.exports={cleave:s("Wcgn"),limit:s("SVsJ"),textarea:s("VRkY")}},SVsJ:function(n,a){n.exports={content:["article",["p","\u5b57\u7b26\u6570\u9650\u5236\uff1a"],["pre",{lang:"jsx",highlighted:'  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      value<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  render <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> valueState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n        <span class="token attr-name">limit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token punctuation">:</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token attr-name">)</span> <span class="token attr-name">=</span><span class="token punctuation">></span> <span class="token attr-name">this.setState({</span> <span class="token attr-name">value</span> <span class="token attr-name">})}</span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>valueState<span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token string">"28%"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>'},["code",'  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: "",\n    }\n  }\n\n  render () {\n    const { value: valueState } = this.state\n    return (\n      <Input\n        limit={10}\n        onChange={({ target: { value } }) => this.setState({ value })}\n        value={valueState}\n        style={{ width: "28%" }}\n      />\n    )\n  }']],["h2","Alert"],["h3","\u5173\u4e8e\u5b57\u7b26\u6570\u9650\u5236"],["p","1.\u9ed8\u8ba4\u5f00\u542f ",["code","countHanzi"],"\uff0c\u4e00\u4e2a\u6c49\u5b57\u8ba1\u7b97\u4e3a ",["strong","2"]," \u5b57\u6570\uff0c\u6570\u5b57\u4e0e\u82f1\u6587\u8ba1\u7b97\u4e3a ",["strong","1"]," \u5b57\u6570\uff1b\u4f60\u53ef\u4ee5\u5173\u95ed\u6b64 Prop\uff0c\u90a3\u6837\u6240\u6709\u5b57\u7b26\u90fd\u8ba1\u7b97\u4e3a ",["strong","1"]," \u5b57\u6570\uff1b",["br"],"2.\u4f7f\u7528 ",["code","limit"]," Prop \u65f6\uff0c",["code","Input"]," \u5fc5\u987b\u662f\u5916\u90e8\u63a7\u5236\u7684\uff08\u5373\u4f20\u5165 ",["code","value"]," \uff09\uff0c\u5426\u5219 ",["code","defaultValue"]," \u4f1a\u76f4\u63a5\u4f20\u7ed9\u539f\u751f ",["code","<input />"]," \u5143\u7d20\u5904\u7406\uff0c\u5728\u8fd9\u6837\u7684\u8bbe\u8ba1\u4e0b\u7ec4\u4ef6\u5185\u90e8\u5e76\u6ca1\u6709\u5b58\u50a8\u5f53\u524d\u7684\u503c\uff0c\u56e0\u6b64\u4e5f\u6ca1\u6709\u529e\u6cd5\u53bb\u8bbe\u7f6e ",["code","limit"]," \u72b6\u6001\u3002  "]],meta:{order:0,title:{"zh-CN":"\u5b57\u6570\u9650\u5236","en-US":"Limit"},filename:"components/input/demo/limit.md"}}},VRkY:function(n,a){n.exports={content:["article",["p","\u6bb5\u843d\u6587\u672c\u8f93\u5165 ",["code","Input.Textarea"],"\uff1a"],["pre",{lang:"jsx",highlighted:'  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      value<span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  render <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> valueState <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input.Textarea</span>\n        <span class="token attr-name">limit</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">15</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token punctuation">:</span> <span class="token punctuation">{</span> value <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token attr-name">)</span> <span class="token attr-name">=</span><span class="token punctuation">></span> <span class="token attr-name">this.setState({</span> <span class="token attr-name">value</span> <span class="token attr-name">})}</span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>valueState<span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token punctuation">:</span> <span class="token string">"46%"</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token string">"120px"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>'},["code",'  constructor(props) {\n    super(props)\n\n    this.state = {\n      value: "",\n    }\n  }\n\n  render () {\n    const { value: valueState } = this.state\n    return (\n      <Input.Textarea\n        limit={15}\n        onChange={({ target: { value } }) => this.setState({ value })}\n        value={valueState}\n        style={{ width: "46%", height: "120px" }}\n      />\n    )\n  }']]],meta:{order:1,title:{"zh-CN":"\u6bb5\u843d\u6587\u672c","en-US":"Textarea"},filename:"components/input/demo/textarea.md"}}},Wcgn:function(n,a){n.exports={content:["article",["p","\u8f93\u5165\u5185\u5bb9\u683c\u5f0f\uff08",["a",{title:null,href:"https://github.com/nosir/cleave.js"},"cleave.js"],"\uff09"],["pre",{lang:"jsx",highlighted:'  <span class="token function">constructor</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n\n    <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n      date<span class="token punctuation">:</span> <span class="token string">"2019-01-21"</span><span class="token punctuation">,</span>\n      password<span class="token punctuation">:</span> <span class="token string">"1234567"</span><span class="token punctuation">,</span>\n      phone<span class="token punctuation">:</span> <span class="token string">"135 0123 4567"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n\n  render <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> date<span class="token punctuation">,</span> password<span class="token punctuation">,</span> phone <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state\n    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n        <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>date<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token punctuation">:</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> date <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token attr-name">)</span> <span class="token attr-name">=</span><span class="token punctuation">></span> <span class="token attr-name">this.setState({</span> <span class="token attr-name">date</span> <span class="token attr-name">})}</span>\n        <span class="token attr-name">cleaveOptions</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          delimiter<span class="token punctuation">:</span> <span class="token string">"-"</span><span class="token punctuation">,</span>\n          blocks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token punctuation">:</span> <span class="token string">"16px"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n        <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>phone<span class="token punctuation">}</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token punctuation">:</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> phone <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token attr-name">)</span> <span class="token attr-name">=</span><span class="token punctuation">></span> <span class="token attr-name">this.setState({</span> <span class="token attr-name">phone</span> <span class="token attr-name">})}</span>\n        <span class="token attr-name">cleaveOptions</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n          blocks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginRight<span class="token punctuation">:</span> <span class="token string">"16px"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n        <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>password<span class="token punctuation">}</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token punctuation">:</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> password <span class="token punctuation">}</span> <span class="token punctuation">}</span></span><span class="token attr-name">)</span> <span class="token attr-name">=</span><span class="token punctuation">></span> <span class="token attr-name">this.setState({</span> <span class="token attr-name">password</span> <span class="token attr-name">})}</span>\n      <span class="token punctuation">/></span></span>\n    <span class="token punctuation">]</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>'},["code",'  constructor(props) {\n    super(props)\n\n    this.state = {\n      date: "2019-01-21",\n      password: "1234567",\n      phone: "135 0123 4567",\n    }\n  }\n\n  render () {\n    const { date, password, phone } = this.state\n    return ([\n      <Input\n        key={0}\n        value={date}\n        onChange={({ target: { value: date } }) => this.setState({ date })}\n        cleaveOptions={{\n          delimiter: "-",\n          blocks: [4, 2, 2],\n        }}\n        style={{ marginRight: "16px" }}\n      />,\n      <Input\n        key={1}\n        value={phone}\n        onChange={({ target: { value: phone } }) => this.setState({ phone })}\n        cleaveOptions={{\n          blocks: [3, 4, 4],\n        }}\n        style={{ marginRight: "16px" }}\n      />,\n      <Input\n        key={2}\n        value={password}\n        type="password"\n        onChange={({ target: { value: password } }) => this.setState({ password })}\n      />\n    ])\n  }']],["h2","Alert"],["h3","\u5173\u4e8e Cleave.js"],["p","\u5229\u7528 ",["code","cleaveOptions"]," \u53ef\u4ee5\u5b9e\u73b0\u624b\u673a\u53f7\u3001\u65e5\u671f\u3001\u6570\u5b57\u53ca\u81ea\u5b9a\u4e49\u683c\u5f0f\u3002",["br"],"\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u901a\u8fc7 ",["code","cleaveOptions={{ uppercase: true }}"]," \u5f00\u542f\u82f1\u6587\u5b57\u6bcd\u5927\u5199\u7684\u529f\u80fd\u3002"]],meta:{order:2,title:{"zh-CN":"\u8f93\u5165\u5185\u5bb9\u683c\u5f0f","en-US":"Cleave"},filename:"components/input/demo/cleave.md"}}}});