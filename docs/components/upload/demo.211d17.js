(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{1625:function(n,s,a){n.exports={basic:a(1683)}},1683:function(n,s){n.exports={content:["article",["p","简单地模拟 ",["code","Upload.Img"]," 所支持的 Props"],["pre",{lang:"jsx",highlighted:'  <span class="token keyword">const</span> link <span class="token operator">=</span> <span class="token string">"https://wximg.qq.com/wxp/bestmoments/img/giflogo.gif"</span>\n\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>progress<span class="token punctuation">,</span> setProgress<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>src<span class="token punctuation">,</span> setSrc<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> upload <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>upload<span class="token operator">?</span><span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> uploadElement <span class="token punctuation">}</span> <span class="token operator">=</span> upload<span class="token punctuation">.</span>current\n      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>uploadElement<span class="token punctuation">,</span> <span class="token string">"yijie"</span><span class="token punctuation">)</span>\n      uploadElement<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token string">"yijie"</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">const</span> handleUpload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> x <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"INPUT"</span><span class="token punctuation">)</span>\n    x<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"type"</span><span class="token punctuation">,</span> <span class="token string">"file"</span><span class="token punctuation">)</span>\n    x<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"accept"</span><span class="token punctuation">,</span> <span class="token string">"image/x-png,image/gif,image/jpeg"</span><span class="token punctuation">)</span>\n    x<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token comment" spellcheck="true">// 模拟进度</span>\n      <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span> <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>\n      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n        <span class="token function">setSrc</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1300</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    x<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Upload.Img</span>\n      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>upload<span class="token punctuation">}</span></span>\n      <span class="token attr-name">progress</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>progress<span class="token punctuation">}</span></span>\n      <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>src<span class="token punctuation">}</span></span>\n      <span class="token attr-name">onIconClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setSrc</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n      <span class="token attr-name">onUpload</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>\n    <span class="token punctuation">/></span></span>\n  <span class="token punctuation">)</span>'},["code",'  const link = "https://wximg.qq.com/wxp/bestmoments/img/giflogo.gif"\n\n  const [progress, setProgress] = useState(null)\n  const [src, setSrc] = useState(link)\n  const upload = useRef(null)\n\n  useEffect(() => {\n    if (upload?.current) {\n      const { uploadElement } = upload.current\n      console.log(uploadElement, "yijie")\n      uploadElement.addEventListener("click", () => {\n        console.log("click", "yijie")\n      })\n    }\n  }, [])\n\n  const handleUpload = () => {\n    const x = document.createElement("INPUT")\n    x.setAttribute("type", "file")\n    x.setAttribute("accept", "image/x-png,image/gif,image/jpeg")\n    x.addEventListener("change", () => {\n      // 模拟进度\n      setProgress(0)\n      setTimeout(() => { setProgress(20) }, 200)\n      setTimeout(() => { setProgress(80) }, 500)\n      setTimeout(() => { setProgress(100) }, 1000)\n      setTimeout(() => {\n        setProgress(null)\n        setSrc(link)\n      }, 1300)\n    })\n    x.click()\n  }\n\n  return (\n    <Upload.Img\n      ref={upload}\n      progress={progress}\n      src={src}\n      onIconClick={() => setSrc("")}\n      onUpload={handleUpload}\n    />\n  )']]],meta:{order:0,title:{"zh-CN":"示例","en-US":"Type"},filename:"components/upload/demo/basic.md"}}}}]);