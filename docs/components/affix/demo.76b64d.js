(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1506:function(n,a,s){n.exports={basic:s(1582)}},1582:function(n,a){n.exports={content:["article",["p","设置 ",["code","getContainer"],"，使元素的位置既固定在页面上，又保持在 container 中。"],["pre",{lang:"jsx",highlighted:'  <span class="token keyword">const</span> wrapperTop <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> wrapperBottom <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>React.Fragment</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>wrapperTop<span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token string">"1% 10% 0"</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token string">"200px"</span><span class="token punctuation">,</span> backgroundColor<span class="token punctuation">:</span> <span class="token string">"var(--gray-100)"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Affix</span>\n          <span class="token attr-name">getContainer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> wrapperTop<span class="token punctuation">.</span>current<span class="token punctuation">}</span></span>\n          <span class="token attr-name">offsetTop</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">80</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">intent</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>保持在容器内，且使用 offsetTop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Affix</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n        <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>wrapperBottom<span class="token punctuation">}</span></span>\n        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> padding<span class="token punctuation">:</span> <span class="token string">"19% 10% 0"</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token string">"200px"</span><span class="token punctuation">,</span> backgroundColor<span class="token punctuation">:</span> <span class="token string">"var(--gray-800)"</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Affix</span>\n          <span class="token attr-name">offsetBottom</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">20</span><span class="token punctuation">}</span></span>\n          <span class="token attr-name">getContainer</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> wrapperBottom<span class="token punctuation">.</span>current<span class="token punctuation">}</span></span>\n          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>affixed <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>affixed<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n        <span class="token punctuation">></span></span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>保持在容器内，且使用 offsetBottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Affix</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>React.Fragment</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span>'},["code",'  const wrapperTop = useRef(null)\n  const wrapperBottom = useRef(null)\n\n  return (\n    <React.Fragment>\n      <div\n        ref={wrapperTop}\n        style={{ padding: "1% 10% 0", height: "200px", backgroundColor: "var(--gray-100)" }}\n      >\n        <Affix\n          getContainer={() => wrapperTop.current}\n          offsetTop={80}\n        >\n          <Button intent="primary">保持在容器内，且使用 offsetTop</Button>\n        </Affix>\n      </div>\n      <div\n        ref={wrapperBottom}\n        style={{ padding: "19% 10% 0", height: "200px", backgroundColor: "var(--gray-800)" }}\n      >\n        <Affix\n          offsetBottom={20}\n          getContainer={() => wrapperBottom.current}\n          onChange={affixed => console.log(affixed)}\n        >\n          <Button>保持在容器内，且使用 offsetBottom</Button>\n        </Affix>\n      </div>\n    </React.Fragment>\n  )']]],meta:{order:0,title:{"zh-CN":"按钮类型","en-US":"Type"},filename:"components/affix/demo/basic.md"}}}}]);