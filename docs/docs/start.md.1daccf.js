(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{1580:function(n,a){n.exports={content:["article",["h1","开始使用"],["div",["img",{src:"https://wxa.wxs.qq.com/mpweb/delivery/legacy/wxadtouch/upload/t1/od834zef_52939fc6.png",style:"margin: 40px 0px 0px -8px; background-color: rgb(252, 252, 252); box-shadow: none;"}]],["hr"],["h2","使用 Package"],["p",["strong","adui"]," 已经发布于 NPM。你可以通过你的包管理器安装（比如 ",["a",{title:null,href:"https://yarnpkg.com"},"Yarn"],"）："],["pre",{lang:"js",highlighted:'yarn add adui react react<span class="token operator">-</span>dom'},["code","yarn add adui react react-dom"]],["p",["strong","adui"]," 目前依赖的 ",["code","react"]," 与 ",["code","react-dom"]," 版本为 16.13.1。",["strong","adui 1.0"]," 使用了 ",["code","Hooks"]," 书写组件，请保证你的 React 版本 ^16.8。"],["hr"],["h2","Import"],["p","引入你所需要的 React 组件。"],["pre",{lang:"js",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"adui"</span>\n\n<span class="token operator">&lt;</span>Button intent<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>开始使用<span class="token operator">&lt;</span>Button<span class="token operator">/</span><span class="token operator">></span>'},["code",'import { Button } from "adui"\n\n<Button intent="primary">开始使用<Button/>']],["p","你不需要独立地引入样式，因为每个组件都会 import 自己的 ",["code",".css"]," 文件。你只需要保证 webpack 的 ",["code","css-loader"]," 能够作用到 ",["code","node_modules/adui"]," 这个文件夹，就能保证样式的正确。"],["p","未来会加入不需要依赖 webpack 配置的编译版本，届时 CSS 文件会完全与 JS 文件分离。"],["hr"],["h2","主题色"],["p",["strong","adui"]," 使用了 CSS Variables 实现变量配置。同时配合 ",["a",{title:null,href:"https://github.com/jhildenbiddle/css-vars-ponyfill"},"css-vars-ponyfill"]," 解决兼容性问题。",["br"],"在引入之后，你的页面上就会有如下的样式："],["pre",{lang:"css",highlighted:'<span class="token selector"><span class="token pseudo-class">:root</span> </span><span class="token punctuation">{</span>\n  <span class="token property">--primary-color</span><span class="token punctuation">:</span> <span class="token hexcode">#07c160</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},["code",":root {\n  --primary-color: #07c160;\n}"]],["p","你可以用更高优先级的 CSS 规则覆盖："],["pre",{lang:"css",highlighted:'<span class="token selector">html<span class="token pseudo-class">:root</span> </span><span class="token punctuation">{</span> <span class="token property">--primary-color</span><span class="token punctuation">:</span> <span class="token hexcode">#00bb9c</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>'},["code","html:root { --primary-color: #00bb9c; }"]],["p",["strong","adui"]," 还设置了许多其他变量比如 ",["code","--gray-50"]," 至 ",["code","--gray-900"],"，但请不要去修改这些变量。"],["hr"],["h2","兼容性"],["h2","Browsers support"],["table",["thead",["tr",["th",["a",{title:null,href:"http://godban.github.io/browsers-support-badges/"},["img",{style:"display: inline-block; margin: 0px; width: 24px; height: 24px; border-radius: 0; box-shadow: none;",src:"https://raw.githubusercontent.com/alrra/browser-logos/master/src/edge/edge_48x48.png",alt:"IE / Edge",width:"24px",height:"24px"}]],["br"],"IE / Edge"],["th",["a",{title:null,href:"http://godban.github.io/browsers-support-badges/"},["img",{style:"display: inline-block; margin: 0px; width: 24px; height: 24px; border-radius: 0; box-shadow: none;",src:"https://raw.githubusercontent.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png",alt:"Firefox",width:"24px",height:"24px"}]],["br"],"Firefox"],["th",["a",{title:null,href:"http://godban.github.io/browsers-support-badges/"},["img",{style:"display: inline-block; margin: 0px; width: 24px; height: 24px; border-radius: 0; box-shadow: none;",src:"https://raw.githubusercontent.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png",alt:"Chrome",width:"24px",height:"24px"}]],["br"],"Chrome"],["th",["a",{title:null,href:"http://godban.github.io/browsers-support-badges/"},["img",{style:"display: inline-block; margin: 0px; width: 24px; height: 24px; border-radius: 0; box-shadow: none;",src:"https://raw.githubusercontent.com/alrra/browser-logos/master/src/safari/safari_48x48.png",alt:"Safari",width:"24px",height:"24px"}]],["br"],"Safari"],["th",["a",{title:null,href:"http://godban.github.io/browsers-support-badges/"},["img",{style:"display: inline-block; margin: 0px; width: 24px; height: 24px; border-radius: 0; box-shadow: none;",src:"https://raw.githubusercontent.com/alrra/browser-logos/master/src/opera/opera_48x48.png",alt:"Opera",width:"24px",height:"24px"}]],["br"],"Opera"]]],["tbody",["tr",["td","Edge"],["td","last 2 versions"],["td","last 2 versions"],["td","last 2 versions"],["td","last 2 versions"]]]],["hr"],["h2","关于组件类型"],["p",["strong","adui 1.0"]," 一部分组件以 ",["code","Function Component"]," + ",["code","Hooks"]," 实现。\n现在，组件一共有 类组件（",["code","Class Component"],"），函数组件（",["code","Function Component"],"），以及也属于函数组件的",["code","ForwardRef Component"],"这三种。"],["h2","关于内部驱动与外部控制"],["p",["strong","adui"]," 所有包含状态的组件都有两种设计，即 ",["strong","内部驱动（uncontrolled）"]," 与 ",["strong","外部控制（controlled）"],"。"],["p","代表内部驱动的 Prop 是 ",["code","defaultValue"],"，代表外部控制的 Prop 是 ",["code","value"],"。比如 ",["code","<Switch />"]," 组件的 ",["code","defaultChecked"]," 与 ",["code","checked"],"。"],["p",["code","defaultChecked"]," 只在第一次渲染（constructor）时生效，之后的状态变化都会完全交给组件自身完成；",["br"],"而 ",["code","checked"]," 则代表如果不从外部改变，那么组件的状态就不会变化（代码上由生命周期 ",["code","getDerivedStateFromProps"]," 实现的）。"],["p","这样设计的原理来源于 React 对表单的 Controlled/Uncontrolled 的概念。",["a",{title:null,href:"https://reactjs.org/docs/forms.html#controlled-components"},"请阅读学习"],"，并且按照需求选择这两种模式使用。"],["p","如果你只是需要设置一个初始值，并且只想要关心这个值的改变情况，比如 ",["code","<Switch defaultChecked onChange={xxx} />"],"，这样你就不需要单独地设置一个 state 保证组件 UI 状态的完整；\n如果你想要存储这个变化的值，并且之后会用这个值回传给 ",["code","<Switch />"],"，那么你需要自己存储这个 state ",["code","<Switch checked={xxx} onChange={xxx} />"],"。"],["hr"],["h2","*Git Submodule"],["p","Package 是推荐的使用方式。\b我们会在每 1 - 2 周进行日常的修订版本号更新。主版本与次版本号的发布不在发布周期内。你可以在 ",["a",{title:null,href:"https://"},"更新日志"]," 中查看具体发布信息。"],["p","如果在需要更新时，你不想更新 Package 的版本，而是随时跟进 ",["code","origin/master"]," 分支的最新代码，你可以选择使用 ",["a",{title:null,href:"https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97"},"Git Submodule"],"。它允许你将 ",["strong","adui"]," 添加到你的 Git 仓库子目录内。同时，",["strong","adui"]," 的提交与你的项目是独立的。因此，这也是解决项目间依赖的一种方法。"],["h3","添加 Submodule"],["pre",{lang:null,highlighted:'$ git submodule add http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>git<span class="token punctuation">.</span>code<span class="token punctuation">.</span>oa<span class="token punctuation">.</span>com<span class="token operator">/</span>yijiejiang<span class="token operator">/</span>adUI<span class="token punctuation">.</span>git adui'},["code","$ git submodule add http://git.code.oa.com/yijiejiang/adUI.git adui"]],["p",'这样，你的项目中就会新增 ".gitmodules" 文件与 "adui" 文件夹。'],["h3","配置 Submodule"],["p","注意："],["ul",["li",["p","Submodule 使用的路径是 ",["code","adui/lib"],"；"]],["li",["p",'请确保针对 "adui" 文件夹配置了 webpack 的 ',["code","css-loader"],"。我们推荐的 loader 配置是："],["pre",{lang:null,highlighted:'{\n  test<span class="token punctuation">:</span> <span class="token operator">/</span>\\<span class="token punctuation">.</span>css$<span class="token operator">/</span><span class="token punctuation">,</span>\n  include<span class="token punctuation">:</span> <span class="token string">"path/to/adui/"</span><span class="token punctuation">,</span>\n  loaders<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span>\n}'},["code",'{\n  test: /\\.css$/,\n  include: "path/to/adui/",\n  loaders: ["style-loader", "css-loader"]\n}']]],["li",["p","你还需要安装 ",["strong","adui"]," 自身的 ",["code","dependencies"],"，一种方法是使用 ",["a",{title:null,href:"https://yarnpkg.com/lang/zh-hans/docs/workspaces/"},"yarn workspace"],"，",["code","yarn workspace"]," 就是为了解决多项目依赖安装的问题，你只需要在主项目的 ",["code","package.json"]," 中："],["pre",{lang:null,highlighted:'{\n  <span class="token string">"private"</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token string">"workspaces"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"adui"</span><span class="token punctuation">]</span>\n}'},["code",'{\n  "private": true,\n  "workspaces": ["adui"]\n}']],["p","这样在执行 ",["code","yarn"]," 时就会同时安装 ",["strong","adui"]," 的依赖了。  "]]],["h3","使用 Submodule"],["p","推荐通过 webpack 的 ",["a",{title:null,href:"https://webpack.docschina.org/configuration/resolve/"},"resolve"]," 配置 alias 存储相对路径："],["pre",{lang:null,highlighted:'resolve<span class="token punctuation">:</span> {\n  alias<span class="token punctuation">:</span> {\n    aduiPath<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'adui/lib/\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  }\n}'},["code","resolve: {\n  alias: {\n    aduiPath: path.resolve(__dirname, 'adui/lib/'),\n  }\n}"]],["p","这样，引入时也简便了很多："],["pre",{lang:"js",highlighted:'<span class="token comment" spellcheck="true">// import { Button } from "path/to/adui/lib"</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"aduiPath"</span>\n\n<span class="token operator">&lt;</span>Button intent<span class="token operator">=</span><span class="token string">"primary"</span><span class="token operator">></span>开始使用<span class="token operator">&lt;</span>Button<span class="token operator">/</span><span class="token operator">></span>'},["code",'// import { Button } from "path/to/adui/lib"\nimport { Button } from "aduiPath"\n\n<Button intent="primary">开始使用<Button/>']],["p","另外，为了让你的 IDE 能够识别 alias，并且给出 TypeScript 自动提示，请在你的 ",["code","tsconfig.json"]," 中配置："],["pre",{lang:"js",highlighted:'<span class="token punctuation">{</span>\n  <span class="token string">"compilerOptions"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token string">"paths"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n      <span class="token string">"aduiPath"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"path/to/adui/lib/"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n '},["code",'{\n  "compilerOptions": {\n    "paths": {\n      "aduiPath": ["path/to/adui/lib/"]\n    }\n  },\n}\n ']],["p","综上所述，",["code","Git Submodule"]," 除了敏捷开发的优点以外，非常麻烦。请尽量不要使用。"]],meta:{filename:"docs/start.md"}}}}]);