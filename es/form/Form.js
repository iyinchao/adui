function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import * as React from "react";
import PropTypes from "prop-types";
import classNames from "classnames";
import { FormContext } from "./Context";
import Item from "./Item";
import Tip from "./Tip";
import "./style";
var prefix = "adui-form";

var Form = function Form(_ref) {
  var children = _ref.children,
      className = _ref.className,
      itemClassName = _ref.itemClassName,
      itemStyle = _ref.itemStyle,
      labelAlign = _ref.labelAlign,
      labelClassName = _ref.labelClassName,
      labelSize = _ref.labelSize,
      labelStyle = _ref.labelStyle,
      otherProps = _objectWithoutProperties(_ref, ["children", "className", "itemClassName", "itemStyle", "labelAlign", "labelClassName", "labelSize", "labelStyle"]);

  var classSet = classNames(className, "".concat(prefix, "-base"));
  return React.createElement(FormContext.Provider, {
    value: {
      itemClassName: itemClassName,
      itemStyle: itemStyle,
      labelAlign: labelAlign,
      labelClassName: labelClassName,
      labelSize: labelSize,
      labelStyle: labelStyle
    }
  }, React.createElement("div", _extends({
    className: classSet
  }, otherProps), children));
};

Form.Item = Item;
Form.Tip = Tip;
Form.propTypes = {
  children: PropTypes.node,
  className: PropTypes.string,
  itemClassName: PropTypes.string,
  itemStyle: PropTypes.object,
  labelAlign: PropTypes.oneOf(["left", "center", "right"]),
  labelClassName: PropTypes.string,
  labelSize: PropTypes.number,
  labelStyle: PropTypes.object
};
Form.defaultProps = {
  children: null,
  className: undefined,
  itemClassName: undefined,
  itemStyle: {},
  labelAlign: null,
  labelClassName: undefined,
  labelSize: null,
  labelStyle: {}
};
export default Form;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXBvbmVudHMvZm9ybS9Gb3JtLnRzeCJdLCJuYW1lcyI6WyJSZWFjdCIsIlByb3BUeXBlcyIsImNsYXNzTmFtZXMiLCJGb3JtQ29udGV4dCIsIkl0ZW0iLCJUaXAiLCJwcmVmaXgiLCJGb3JtIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJpdGVtQ2xhc3NOYW1lIiwiaXRlbVN0eWxlIiwibGFiZWxBbGlnbiIsImxhYmVsQ2xhc3NOYW1lIiwibGFiZWxTaXplIiwibGFiZWxTdHlsZSIsIm90aGVyUHJvcHMiLCJjbGFzc1NldCIsInByb3BUeXBlcyIsIm5vZGUiLCJzdHJpbmciLCJvYmplY3QiLCJvbmVPZiIsIm51bWJlciIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxLQUFLQSxLQUFaLE1BQXVCLE9BQXZCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLE9BQU9DLFVBQVAsTUFBdUIsWUFBdkI7QUFDQSxTQUFTQyxXQUFULFFBQTRCLFdBQTVCO0FBQ0EsT0FBT0MsSUFBUCxNQUFpQixRQUFqQjtBQUNBLE9BQU9DLEdBQVAsTUFBZ0IsT0FBaEI7QUFDQSxPQUFPLFNBQVA7QUFFQSxJQUFNQyxNQUFNLEdBQUcsV0FBZjs7QUF5Q0EsSUFBTUMsSUFHTCxHQUFHLFNBSEVBLElBR0YsT0FVYztBQUFBLE1BVGhCQyxRQVNnQixRQVRoQkEsUUFTZ0I7QUFBQSxNQVJoQkMsU0FRZ0IsUUFSaEJBLFNBUWdCO0FBQUEsTUFQaEJDLGFBT2dCLFFBUGhCQSxhQU9nQjtBQUFBLE1BTmhCQyxTQU1nQixRQU5oQkEsU0FNZ0I7QUFBQSxNQUxoQkMsVUFLZ0IsUUFMaEJBLFVBS2dCO0FBQUEsTUFKaEJDLGNBSWdCLFFBSmhCQSxjQUlnQjtBQUFBLE1BSGhCQyxTQUdnQixRQUhoQkEsU0FHZ0I7QUFBQSxNQUZoQkMsVUFFZ0IsUUFGaEJBLFVBRWdCO0FBQUEsTUFEYkMsVUFDYTs7QUFDaEIsTUFBTUMsUUFBUSxHQUFHZixVQUFVLENBQUNPLFNBQUQsWUFBZUgsTUFBZixXQUEzQjtBQUVBLFNBQ0Usb0JBQUMsV0FBRCxDQUFhLFFBQWI7QUFDRSxJQUFBLEtBQUssRUFBRTtBQUNMSSxNQUFBQSxhQUFhLEVBQWJBLGFBREs7QUFFTEMsTUFBQUEsU0FBUyxFQUFUQSxTQUZLO0FBR0xDLE1BQUFBLFVBQVUsRUFBVkEsVUFISztBQUlMQyxNQUFBQSxjQUFjLEVBQWRBLGNBSks7QUFLTEMsTUFBQUEsU0FBUyxFQUFUQSxTQUxLO0FBTUxDLE1BQUFBLFVBQVUsRUFBVkE7QUFOSztBQURULEtBVUU7QUFBSyxJQUFBLFNBQVMsRUFBRUU7QUFBaEIsS0FBOEJELFVBQTlCLEdBQ0dSLFFBREgsQ0FWRixDQURGO0FBZ0JELENBaENEOztBQWtDQUQsSUFBSSxDQUFDSCxJQUFMLEdBQVlBLElBQVo7QUFFQUcsSUFBSSxDQUFDRixHQUFMLEdBQVdBLEdBQVg7QUFFQUUsSUFBSSxDQUFDVyxTQUFMLEdBQWlCO0FBSWZWLEVBQUFBLFFBQVEsRUFBRVAsU0FBUyxDQUFDa0IsSUFKTDtBQVFmVixFQUFBQSxTQUFTLEVBQUVSLFNBQVMsQ0FBQ21CLE1BUk47QUFZZlYsRUFBQUEsYUFBYSxFQUFFVCxTQUFTLENBQUNtQixNQVpWO0FBZ0JmVCxFQUFBQSxTQUFTLEVBQUVWLFNBQVMsQ0FBQ29CLE1BaEJOO0FBb0JmVCxFQUFBQSxVQUFVLEVBQUVYLFNBQVMsQ0FBQ3FCLEtBQVYsQ0FBZ0IsQ0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixPQUFuQixDQUFoQixDQXBCRztBQXdCZlQsRUFBQUEsY0FBYyxFQUFFWixTQUFTLENBQUNtQixNQXhCWDtBQTRCZk4sRUFBQUEsU0FBUyxFQUFFYixTQUFTLENBQUNzQixNQTVCTjtBQWdDZlIsRUFBQUEsVUFBVSxFQUFFZCxTQUFTLENBQUNvQjtBQWhDUCxDQUFqQjtBQW1DQWQsSUFBSSxDQUFDaUIsWUFBTCxHQUFvQjtBQUNsQmhCLEVBQUFBLFFBQVEsRUFBRSxJQURRO0FBRWxCQyxFQUFBQSxTQUFTLEVBQUVnQixTQUZPO0FBR2xCZixFQUFBQSxhQUFhLEVBQUVlLFNBSEc7QUFJbEJkLEVBQUFBLFNBQVMsRUFBRSxFQUpPO0FBS2xCQyxFQUFBQSxVQUFVLEVBQUUsSUFMTTtBQU1sQkMsRUFBQUEsY0FBYyxFQUFFWSxTQU5FO0FBT2xCWCxFQUFBQSxTQUFTLEVBQUUsSUFQTztBQVFsQkMsRUFBQUEsVUFBVSxFQUFFO0FBUk0sQ0FBcEI7QUFXQSxlQUFlUixJQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIlxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSBcImNsYXNzbmFtZXNcIlxuaW1wb3J0IHsgRm9ybUNvbnRleHQgfSBmcm9tIFwiLi9Db250ZXh0XCJcbmltcG9ydCBJdGVtIGZyb20gXCIuL0l0ZW1cIlxuaW1wb3J0IFRpcCBmcm9tIFwiLi9UaXBcIlxuaW1wb3J0IFwiLi9zdHlsZVwiXG5cbmNvbnN0IHByZWZpeCA9IFwiYWR1aS1mb3JtXCJcblxuZXhwb3J0IGludGVyZmFjZSBJRm9ybVByb3BzIHtcbiAgW2tleTogc3RyaW5nXTogYW55XG4gIC8qKlxuICAgKiDlrZDoioLngrlcbiAgICovXG4gIGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlXG4gIC8qKlxuICAgKiDpmYTliqDnsbvlkI1cbiAgICovXG4gIGNsYXNzTmFtZT86IHN0cmluZ1xuICAvKipcbiAgICogaXRlbSBjbGFzc05hbWVcbiAgICovXG4gIGl0ZW1DbGFzc05hbWU/OiBzdHJpbmdcbiAgLyoqXG4gICAqIGl0ZW0gc3R5bGVcbiAgICovXG4gIGl0ZW1TdHlsZT86IFJlYWN0LkNTU1Byb3BlcnRpZXNcbiAgLyoqXG4gICAqIGxhYmVsIOWtl+espuWvuem9kOaWueW8j1xuICAgKi9cbiAgbGFiZWxBbGlnbj86IFwibGVmdFwiIHwgXCJjZW50ZXJcIiB8IFwicmlnaHRcIiB8IG51bGxcbiAgLyoqXG4gICAqIGxhYmVsIOWtl+espuaVsO+8jEZvcm0g5Lya5LulIGVtIOWNleS9jeiuvue9riBsYWJlbCDlrr3luqZcbiAgICovXG4gIGxhYmVsU2l6ZT86IG51bWJlciB8IG51bGxcbiAgLyoqXG4gICAqIGxhYmVsIGNsYXNzTmFtZVxuICAgKi9cbiAgbGFiZWxDbGFzc05hbWU/OiBzdHJpbmdcbiAgLyoqXG4gICAqIGxhYmVsIHN0eWxlXG4gICAqL1xuICBsYWJlbFN0eWxlPzogUmVhY3QuQ1NTUHJvcGVydGllc1xufVxuXG4vKipcbiAqIOihqOWNle+8jOWMheWQq+ihqOWNlemhueagh+mimOOAgei+k+WFpeWGheWuueOAgeihjOWKqOaMiemSruetieaVsOaNrumHh+mbhueahOmbhuWQiOW9ouaAgeOAgumAmuW4uOacjeWKoeS6juWkp+mHj+mcgOimgeaUtumbhueUqOaIt+S/oeaBr+WcuuaZr+OAglxuICovXG5jb25zdCBGb3JtOiBSZWFjdC5GQzxJRm9ybVByb3BzPiAmIHtcbiAgSXRlbTogdHlwZW9mIEl0ZW1cbiAgVGlwOiB0eXBlb2YgVGlwXG59ID0gKHtcbiAgY2hpbGRyZW4sXG4gIGNsYXNzTmFtZSxcbiAgaXRlbUNsYXNzTmFtZSxcbiAgaXRlbVN0eWxlLFxuICBsYWJlbEFsaWduLFxuICBsYWJlbENsYXNzTmFtZSxcbiAgbGFiZWxTaXplLFxuICBsYWJlbFN0eWxlLFxuICAuLi5vdGhlclByb3BzXG59OiBJRm9ybVByb3BzKSA9PiB7XG4gIGNvbnN0IGNsYXNzU2V0ID0gY2xhc3NOYW1lcyhjbGFzc05hbWUsIGAke3ByZWZpeH0tYmFzZWApXG5cbiAgcmV0dXJuIChcbiAgICA8Rm9ybUNvbnRleHQuUHJvdmlkZXJcbiAgICAgIHZhbHVlPXt7XG4gICAgICAgIGl0ZW1DbGFzc05hbWUsXG4gICAgICAgIGl0ZW1TdHlsZSxcbiAgICAgICAgbGFiZWxBbGlnbixcbiAgICAgICAgbGFiZWxDbGFzc05hbWUsXG4gICAgICAgIGxhYmVsU2l6ZSxcbiAgICAgICAgbGFiZWxTdHlsZSxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPGRpdiBjbGFzc05hbWU9e2NsYXNzU2V0fSB7Li4ub3RoZXJQcm9wc30+XG4gICAgICAgIHtjaGlsZHJlbn1cbiAgICAgIDwvZGl2PlxuICAgIDwvRm9ybUNvbnRleHQuUHJvdmlkZXI+XG4gIClcbn1cblxuRm9ybS5JdGVtID0gSXRlbVxuXG5Gb3JtLlRpcCA9IFRpcFxuXG5Gb3JtLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIOWtkOiKgueCuVxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuICAvKipcbiAgICog6ZmE5Yqg57G75ZCNXG4gICAqL1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIC8qKlxuICAgKiBpdGVtIGNsYXNzTmFtZVxuICAgKi9cbiAgaXRlbUNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgLyoqXG4gICAqIGl0ZW0gc3R5bGVcbiAgICovXG4gIGl0ZW1TdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgLyoqXG4gICAqIGxhYmVsIOWtl+espuWvuem9kOaWueW8j1xuICAgKi9cbiAgbGFiZWxBbGlnbjogUHJvcFR5cGVzLm9uZU9mKFtcImxlZnRcIiwgXCJjZW50ZXJcIiwgXCJyaWdodFwiXSksXG4gIC8qKlxuICAgKiBsYWJlbCBjbGFzc05hbWVcbiAgICovXG4gIGxhYmVsQ2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAvKipcbiAgICogbGFiZWwg5a2X56ym5pWw77yMRm9ybSDkvJrku6UgZW0g5Y2V5L2N6K6+572uIGxhYmVsIOWuveW6plxuICAgKi9cbiAgbGFiZWxTaXplOiBQcm9wVHlwZXMubnVtYmVyLFxuICAvKipcbiAgICogbGFiZWwgc3R5bGVcbiAgICovXG4gIGxhYmVsU3R5bGU6IFByb3BUeXBlcy5vYmplY3QsXG59XG5cbkZvcm0uZGVmYXVsdFByb3BzID0ge1xuICBjaGlsZHJlbjogbnVsbCxcbiAgY2xhc3NOYW1lOiB1bmRlZmluZWQsXG4gIGl0ZW1DbGFzc05hbWU6IHVuZGVmaW5lZCxcbiAgaXRlbVN0eWxlOiB7fSxcbiAgbGFiZWxBbGlnbjogbnVsbCxcbiAgbGFiZWxDbGFzc05hbWU6IHVuZGVmaW5lZCxcbiAgbGFiZWxTaXplOiBudWxsLFxuICBsYWJlbFN0eWxlOiB7fSxcbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybVxuIl19