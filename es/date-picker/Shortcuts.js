function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import * as React from "react";
import PropTypes from "prop-types";
import classNames from "classnames";
import { DateUtils } from "day-picker-react";
import "./style";
var prefix = "adui-date";

var Shortcuts = function Shortcuts(_ref) {
  var onShortcutClick = _ref.onShortcutClick,
      selectedDay = _ref.selectedDay,
      selectedDays = _ref.selectedDays,
      shortcuts = _ref.shortcuts;
  return React.createElement("div", {
    className: "".concat(prefix, "-shortcuts")
  }, shortcuts && shortcuts.map(function (shortcut) {
    var label = shortcut.label,
        valueShortcut = shortcut.value;
    var selected = false;

    if (selectedDays && selectedDays.length && Array.isArray(valueShortcut)) {
      selected = selectedDays && valueShortcut && DateUtils.isSameDay(selectedDays[0], valueShortcut[0]) && DateUtils.isSameDay(selectedDays[1], valueShortcut[1]);
    } else {
      selected = selectedDay && valueShortcut && DateUtils.isSameDay(selectedDay, valueShortcut);
    }

    return React.createElement("div", {
      key: valueShortcut.toString(),
      className: classNames("".concat(prefix, "-shortcut"), _defineProperty({}, "".concat(prefix, "-shortcutActive"), selected)),
      "data-value": valueShortcut,
      onClick: function onClick() {
        return onShortcutClick(valueShortcut);
      },
      tabIndex: 0,
      onKeyDown: function onKeyDown(e) {
        if (e.keyCode === 13) {
          onShortcutClick(valueShortcut);
        }
      },
      role: "menuitem"
    }, label);
  }));
};

Shortcuts.propTypes = {
  onShortcutClick: PropTypes.any.isRequired,
  selectedDay: PropTypes.any,
  selectedDays: PropTypes.any,
  shortcuts: PropTypes.any.isRequired
};
Shortcuts.defaultProps = {
  selectedDay: null,
  selectedDays: null
};
export default Shortcuts;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NvbXBvbmVudHMvZGF0ZS1waWNrZXIvU2hvcnRjdXRzLnRzeCJdLCJuYW1lcyI6WyJSZWFjdCIsIlByb3BUeXBlcyIsImNsYXNzTmFtZXMiLCJEYXRlVXRpbHMiLCJwcmVmaXgiLCJTaG9ydGN1dHMiLCJvblNob3J0Y3V0Q2xpY2siLCJzZWxlY3RlZERheSIsInNlbGVjdGVkRGF5cyIsInNob3J0Y3V0cyIsIm1hcCIsInNob3J0Y3V0IiwibGFiZWwiLCJ2YWx1ZVNob3J0Y3V0IiwidmFsdWUiLCJzZWxlY3RlZCIsImxlbmd0aCIsIkFycmF5IiwiaXNBcnJheSIsImlzU2FtZURheSIsInRvU3RyaW5nIiwiZSIsImtleUNvZGUiLCJwcm9wVHlwZXMiLCJhbnkiLCJpc1JlcXVpcmVkIiwiZGVmYXVsdFByb3BzIl0sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sS0FBS0EsS0FBWixNQUF1QixPQUF2QjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLFlBQXZCO0FBQ0EsU0FBU0MsU0FBVCxRQUEwQixrQkFBMUI7QUFDQSxPQUFPLFNBQVA7QUFFQSxJQUFNQyxNQUFNLEdBQUcsV0FBZjs7QUFrQkEsSUFBTUMsU0FBb0MsR0FBRyxTQUF2Q0EsU0FBdUM7QUFBQSxNQUMzQ0MsZUFEMkMsUUFDM0NBLGVBRDJDO0FBQUEsTUFFM0NDLFdBRjJDLFFBRTNDQSxXQUYyQztBQUFBLE1BRzNDQyxZQUgyQyxRQUczQ0EsWUFIMkM7QUFBQSxNQUkzQ0MsU0FKMkMsUUFJM0NBLFNBSjJDO0FBQUEsU0FNM0M7QUFBSyxJQUFBLFNBQVMsWUFBS0wsTUFBTDtBQUFkLEtBQ0dLLFNBQVMsSUFDUkEsU0FBUyxDQUFDQyxHQUFWLENBQWMsVUFBQ0MsUUFBRCxFQUFjO0FBQUEsUUFDbEJDLEtBRGtCLEdBQ2NELFFBRGQsQ0FDbEJDLEtBRGtCO0FBQUEsUUFDSkMsYUFESSxHQUNjRixRQURkLENBQ1hHLEtBRFc7QUFFMUIsUUFBSUMsUUFBUSxHQUFHLEtBQWY7O0FBQ0EsUUFDRVAsWUFBWSxJQUNaQSxZQUFZLENBQUNRLE1BRGIsSUFFQUMsS0FBSyxDQUFDQyxPQUFOLENBQWNMLGFBQWQsQ0FIRixFQUlFO0FBQ0FFLE1BQUFBLFFBQVEsR0FDTlAsWUFBWSxJQUNaSyxhQURBLElBRUFWLFNBQVMsQ0FBQ2dCLFNBQVYsQ0FBb0JYLFlBQVksQ0FBQyxDQUFELENBQWhDLEVBQXFDSyxhQUFhLENBQUMsQ0FBRCxDQUFsRCxDQUZBLElBR0FWLFNBQVMsQ0FBQ2dCLFNBQVYsQ0FBb0JYLFlBQVksQ0FBQyxDQUFELENBQWhDLEVBQXFDSyxhQUFhLENBQUMsQ0FBRCxDQUFsRCxDQUpGO0FBS0QsS0FWRCxNQVVPO0FBQ0xFLE1BQUFBLFFBQVEsR0FDTlIsV0FBVyxJQUNYTSxhQURBLElBRUFWLFNBQVMsQ0FBQ2dCLFNBQVYsQ0FBb0JaLFdBQXBCLEVBQWlDTSxhQUFqQyxDQUhGO0FBSUQ7O0FBQ0QsV0FDRTtBQUNFLE1BQUEsR0FBRyxFQUFFQSxhQUFhLENBQUNPLFFBQWQsRUFEUDtBQUVFLE1BQUEsU0FBUyxFQUFFbEIsVUFBVSxXQUFJRSxNQUFKLDhDQUNmQSxNQURlLHNCQUNXVyxRQURYLEVBRnZCO0FBS0Usb0JBQVlGLGFBTGQ7QUFNRSxNQUFBLE9BQU8sRUFBRTtBQUFBLGVBQU1QLGVBQWUsQ0FBQ08sYUFBRCxDQUFyQjtBQUFBLE9BTlg7QUFPRSxNQUFBLFFBQVEsRUFBRSxDQVBaO0FBUUUsTUFBQSxTQUFTLEVBQUUsbUJBQUNRLENBQUQsRUFBTztBQUNoQixZQUFJQSxDQUFDLENBQUNDLE9BQUYsS0FBYyxFQUFsQixFQUFzQjtBQUNwQmhCLFVBQUFBLGVBQWUsQ0FBQ08sYUFBRCxDQUFmO0FBQ0Q7QUFDRixPQVpIO0FBYUUsTUFBQSxJQUFJLEVBQUM7QUFiUCxPQWVHRCxLQWZILENBREY7QUFtQkQsR0F0Q0QsQ0FGSixDQU4yQztBQUFBLENBQTdDOztBQWtEQVAsU0FBUyxDQUFDa0IsU0FBVixHQUFzQjtBQUlwQmpCLEVBQUFBLGVBQWUsRUFBRUwsU0FBUyxDQUFDdUIsR0FBVixDQUFjQyxVQUpYO0FBUXBCbEIsRUFBQUEsV0FBVyxFQUFFTixTQUFTLENBQUN1QixHQVJIO0FBWXBCaEIsRUFBQUEsWUFBWSxFQUFFUCxTQUFTLENBQUN1QixHQVpKO0FBb0JwQmYsRUFBQUEsU0FBUyxFQUFFUixTQUFTLENBQUN1QixHQUFWLENBQWNDO0FBcEJMLENBQXRCO0FBdUJBcEIsU0FBUyxDQUFDcUIsWUFBVixHQUF5QjtBQUN2Qm5CLEVBQUFBLFdBQVcsRUFBRSxJQURVO0FBRXZCQyxFQUFBQSxZQUFZLEVBQUU7QUFGUyxDQUF6QjtBQUtBLGVBQWVILFNBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tIFwiY2xhc3NuYW1lc1wiXG5pbXBvcnQgeyBEYXRlVXRpbHMgfSBmcm9tIFwiZGF5LXBpY2tlci1yZWFjdFwiXG5pbXBvcnQgXCIuL3N0eWxlXCJcblxuY29uc3QgcHJlZml4ID0gXCJhZHVpLWRhdGVcIlxuXG5leHBvcnQgaW50ZXJmYWNlIElTaG9ydGN1dHNQcm9wcyB7XG4gIFtrZXk6IHN0cmluZ106IGFueVxuICBvblNob3J0Y3V0Q2xpY2s6IChcbiAgICB2YWx1ZTogRGF0ZSB8IFtEYXRlIHwgbnVsbCB8IHVuZGVmaW5lZCwgRGF0ZSB8IG51bGwgfCB1bmRlZmluZWRdXG4gICkgPT4gdm9pZFxuICBzZWxlY3RlZERheT86IERhdGUgfCBcIlwiIHwgbnVsbFxuICBzZWxlY3RlZERheXM/OiBbRGF0ZSB8IG51bGwgfCB1bmRlZmluZWQsIERhdGUgfCBudWxsIHwgdW5kZWZpbmVkXSB8IG51bGxcbiAgc2hvcnRjdXRzPzoge1xuICAgIGxhYmVsOiBSZWFjdC5SZWFjdE5vZGVcbiAgICB2YWx1ZTogRGF0ZSB8IFtEYXRlIHwgbnVsbCB8IHVuZGVmaW5lZCwgRGF0ZSB8IG51bGwgfCB1bmRlZmluZWRdXG4gIH1bXVxufVxuXG4vKipcbiAqIOaXpeacn+mAieaLqSBTaG9ydGN1dHNcbiAqL1xuY29uc3QgU2hvcnRjdXRzOiBSZWFjdC5GQzxJU2hvcnRjdXRzUHJvcHM+ID0gKHtcbiAgb25TaG9ydGN1dENsaWNrLFxuICBzZWxlY3RlZERheSxcbiAgc2VsZWN0ZWREYXlzLFxuICBzaG9ydGN1dHMsXG59OiBJU2hvcnRjdXRzUHJvcHMpID0+IChcbiAgPGRpdiBjbGFzc05hbWU9e2Ake3ByZWZpeH0tc2hvcnRjdXRzYH0+XG4gICAge3Nob3J0Y3V0cyAmJlxuICAgICAgc2hvcnRjdXRzLm1hcCgoc2hvcnRjdXQpID0+IHtcbiAgICAgICAgY29uc3QgeyBsYWJlbCwgdmFsdWU6IHZhbHVlU2hvcnRjdXQgfSA9IHNob3J0Y3V0XG4gICAgICAgIGxldCBzZWxlY3RlZCA9IGZhbHNlXG4gICAgICAgIGlmIChcbiAgICAgICAgICBzZWxlY3RlZERheXMgJiZcbiAgICAgICAgICBzZWxlY3RlZERheXMubGVuZ3RoICYmXG4gICAgICAgICAgQXJyYXkuaXNBcnJheSh2YWx1ZVNob3J0Y3V0KVxuICAgICAgICApIHtcbiAgICAgICAgICBzZWxlY3RlZCA9XG4gICAgICAgICAgICBzZWxlY3RlZERheXMgJiZcbiAgICAgICAgICAgIHZhbHVlU2hvcnRjdXQgJiZcbiAgICAgICAgICAgIERhdGVVdGlscy5pc1NhbWVEYXkoc2VsZWN0ZWREYXlzWzBdLCB2YWx1ZVNob3J0Y3V0WzBdKSAmJlxuICAgICAgICAgICAgRGF0ZVV0aWxzLmlzU2FtZURheShzZWxlY3RlZERheXNbMV0sIHZhbHVlU2hvcnRjdXRbMV0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2VsZWN0ZWQgPVxuICAgICAgICAgICAgc2VsZWN0ZWREYXkgJiZcbiAgICAgICAgICAgIHZhbHVlU2hvcnRjdXQgJiZcbiAgICAgICAgICAgIERhdGVVdGlscy5pc1NhbWVEYXkoc2VsZWN0ZWREYXksIHZhbHVlU2hvcnRjdXQpXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICBrZXk9e3ZhbHVlU2hvcnRjdXQudG9TdHJpbmcoKX1cbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcyhgJHtwcmVmaXh9LXNob3J0Y3V0YCwge1xuICAgICAgICAgICAgICBbYCR7cHJlZml4fS1zaG9ydGN1dEFjdGl2ZWBdOiBzZWxlY3RlZCxcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgZGF0YS12YWx1ZT17dmFsdWVTaG9ydGN1dH1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG9uU2hvcnRjdXRDbGljayh2YWx1ZVNob3J0Y3V0KX1cbiAgICAgICAgICAgIHRhYkluZGV4PXswfVxuICAgICAgICAgICAgb25LZXlEb3duPXsoZSkgPT4ge1xuICAgICAgICAgICAgICBpZiAoZS5rZXlDb2RlID09PSAxMykge1xuICAgICAgICAgICAgICAgIG9uU2hvcnRjdXRDbGljayh2YWx1ZVNob3J0Y3V0KVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgcm9sZT1cIm1lbnVpdGVtXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICB7bGFiZWx9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICAgIH0pfVxuICA8L2Rpdj5cbilcblxuU2hvcnRjdXRzLnByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIHNob3J0Y3V0IGNsaWNrIGhhbmRsZXJcbiAgICovXG4gIG9uU2hvcnRjdXRDbGljazogUHJvcFR5cGVzLmFueS5pc1JlcXVpcmVkLFxuICAvKipcbiAgICog5b2T5YmN5pel5pyf77yM5LuF5L6bIERhdGVQaWNrZXIg5L2/55SoXG4gICAqL1xuICBzZWxlY3RlZERheTogUHJvcFR5cGVzLmFueSxcbiAgLyoqXG4gICAqIOW9k+WJjeaXpeacn+iMg+WbtO+8jOS7heS+myBSYW5nZVBpY2tlciDkvb/nlKhcbiAgICovXG4gIHNlbGVjdGVkRGF5czogUHJvcFR5cGVzLmFueSxcbiAgLyoqXG4gICAqIOW/q+aNt+mAieaLqemhue+8jOagvOW8j++8mlxuICAgKiBbe1xuICAgKiAgIGxhYmVsOiBcIuelluWbveeUn+aXpVwiLFxuICAgKiAgIHZhbHVlOiBuZXcgRGF0ZShcIjIwMjAtMTAtMDFcIiksXG4gICAqIH1dXG4gICAqL1xuICBzaG9ydGN1dHM6IFByb3BUeXBlcy5hbnkuaXNSZXF1aXJlZCxcbn1cblxuU2hvcnRjdXRzLmRlZmF1bHRQcm9wcyA9IHtcbiAgc2VsZWN0ZWREYXk6IG51bGwsXG4gIHNlbGVjdGVkRGF5czogbnVsbCxcbn1cblxuZXhwb3J0IGRlZmF1bHQgU2hvcnRjdXRzXG4iXX0=